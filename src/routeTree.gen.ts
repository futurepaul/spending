/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AgencyAgencyIdImport } from './routes/agency.$agencyId'
import { Route as AgencyAgencyIdAccountAccountIdImport } from './routes/agency_.$agencyId.account.$accountId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AgencyAgencyIdRoute = AgencyAgencyIdImport.update({
  id: '/agency/$agencyId',
  path: '/agency/$agencyId',
  getParentRoute: () => rootRoute,
} as any)

const AgencyAgencyIdAccountAccountIdRoute =
  AgencyAgencyIdAccountAccountIdImport.update({
    id: '/agency_/$agencyId/account/$accountId',
    path: '/agency/$agencyId/account/$accountId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/agency/$agencyId': {
      id: '/agency/$agencyId'
      path: '/agency/$agencyId'
      fullPath: '/agency/$agencyId'
      preLoaderRoute: typeof AgencyAgencyIdImport
      parentRoute: typeof rootRoute
    }
    '/agency_/$agencyId/account/$accountId': {
      id: '/agency_/$agencyId/account/$accountId'
      path: '/agency/$agencyId/account/$accountId'
      fullPath: '/agency/$agencyId/account/$accountId'
      preLoaderRoute: typeof AgencyAgencyIdAccountAccountIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/agency/$agencyId': typeof AgencyAgencyIdRoute
  '/agency/$agencyId/account/$accountId': typeof AgencyAgencyIdAccountAccountIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/agency/$agencyId': typeof AgencyAgencyIdRoute
  '/agency/$agencyId/account/$accountId': typeof AgencyAgencyIdAccountAccountIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/agency/$agencyId': typeof AgencyAgencyIdRoute
  '/agency_/$agencyId/account/$accountId': typeof AgencyAgencyIdAccountAccountIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/agency/$agencyId' | '/agency/$agencyId/account/$accountId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/agency/$agencyId' | '/agency/$agencyId/account/$accountId'
  id:
    | '__root__'
    | '/'
    | '/agency/$agencyId'
    | '/agency_/$agencyId/account/$accountId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AgencyAgencyIdRoute: typeof AgencyAgencyIdRoute
  AgencyAgencyIdAccountAccountIdRoute: typeof AgencyAgencyIdAccountAccountIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AgencyAgencyIdRoute: AgencyAgencyIdRoute,
  AgencyAgencyIdAccountAccountIdRoute: AgencyAgencyIdAccountAccountIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/agency/$agencyId",
        "/agency_/$agencyId/account/$accountId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/agency/$agencyId": {
      "filePath": "agency.$agencyId.tsx"
    },
    "/agency_/$agencyId/account/$accountId": {
      "filePath": "agency_.$agencyId.account.$accountId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
